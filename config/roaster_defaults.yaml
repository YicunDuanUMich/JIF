# This is an example config file that can be passed to Roaster
# Most parameters are optional and will be given defaults by Roaster
# if not present.
#
# Input image files to process
# If more than 1 input file, list as separate key : value pairs
#
# This test file is generated by galsim_galaxy.py
infiles :
  infile_1 : ../data/TestData/test_image_data.h5

#
# Control some top-level settings of the Roaster script
#
metadata :
  # Output HDF5 file to record posterior samples and ln-posterior densities
  # The extension will be added to the outfile
  outfile : ../output/TestData/roaster_out

#
# Control what input data is loaded to Roaster
#
data :
  # Specifier indicating format of the input file
  data_format : jif_segment
  # Index of the 'segments' or 'footprints' to load from each input file.
  # Must be a single integer value of one segment.
  # Roaster can only fit models to one segment at a time.
  segment_number : 0
  # If provided, select only the names single telescope data from the input file.
  telescope : LSST
  # Names of a subset of filters to load from the input file.
  # If not provided, then get data for all available filters (for each 
  # telescope).
  filters : r
  # -1 means get all available epochs
  epoch_num : -1

#
# Control the galaxy or star source model 
#
model :
  # Type of parametric source model.
  # Can be 'Spergel', 'Sersic', 'BulgeDisk', 'star' - see parameters.py
  #   ['Sersic', 'Spergel', 'BulgeDisk' (default), 'star']
  # If 'star' is specified, then any PSF model sampling is turned off. This 
  # takes precedence over any other PSF sampling arguments or settings.
  galaxy_model_type : Spergel
  # Names of the source model parameters to sample in.
  # Must be consistent with the 'galaxy_model_type'.
  # model_params : nu hlr e beta mag_sed1 dx dy psf_fwhm
  model_params : e1 e2
  # How many sources in the single footprint?
  num_sources : 1
  # Use an achromatic galaxy or star model?
  # If True then skip all the GalSim ChromaticObject stuff.
  # This means no rendering of SEDs through passbands or chromatic aberrations.
  # Also, it makes the 'mag' parameters less relateable to realistic values.
  achromatic : True

#
# Control the intial state of the Roaster instance
#
init :
  # Name of a config file with model parameter values to initialize the MCMC chain.
  init_param_file : ../config/roaster_params.cfg
  # Seed for the pseudo-random number generator.
  seed : 9216526

#
# Control the runtime settings
#
run :
  # Suppress most standard outputs (does not apply to 'debug' statements)
  quiet : True
  # Print extra debugging information
  debug : False
  # Just save an image of the model initialized in Roaster?
  # If false then proceed to MCMC sampling.
  output_model : True

#
# Control the MCMC settings
#
sampling :
  # Name of the MC sampler to use. 
  # Available samplers: 'emcee', 'sirs'
  sampler : emcee
  # Number of samples for each emcee walker
  nsamples : 500
  # Number of emcee walkers
  nwalkers : 32
  # Number of burn-in steps to discard from the start of the MCMC chain.
  nburn : 200
  # Number of compute threads to use - buggy
  nthreads : 1
